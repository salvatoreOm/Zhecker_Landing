<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    
    <!-- First we consider whether the incoming URL matches a physical file in the /dist folder -->
    <rewrite>
      <rules>
        <!-- All other URLs are mapped to the Node.js site entry point -->
        <rule name="DynamicContent">
          <match url="/*" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server.js"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />

    <!--
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled
      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <iisnode 
      node_env="production"
      nodeProcessCommandLine="D:\Program Files\nodejs\20.17.0\node.exe"
      watchedFiles="web.config;*.js"
      debuggingEnabled="false"
      loggingEnabled="true"
      logDirectoryNameSuffix="logs" />
      
  </system.webServer>
</configuration>